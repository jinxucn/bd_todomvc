{"version":3,"sources":["redux/constants.js","redux/reducers.js","redux/localStorage.js","redux/store.js","redux/actions.js","components/AddTodo.js","components/TodoItem.js","components/TodoList.js","components/Filter.js","components/App.js","index.js"],"names":["FILTERS","ALL","ACTIVE","COMPLETED","ACTIONS","initialState","window","localStorage","state","JSON","parse","getItem","console","log","loadState","allIds","allTodos","filter","createStore","action","type","payload","id","content","completed","newTodos","Object","assign","e","allCompleted","forEach","newIds","todoId","AddTodo","dispatch","useDispatch","useState","setContent","className","placeholder","onChange","target","value","onKeyDown","keyCode","addTodo","TodoItem","props","todo","editing","handleToggle","bind","handleRemove","handleRename","handleChange","this","setState","toggleTodo","removeTodo","renameTodo","cx","checked","onDoubleClick","lastElementChild","focus","nextElementSibling","stopPropagation","blur","onBlur","onClick","PureComponent","connect","TodoList","useSelector","filteredTodos","ids","todos","map","getFilteredTodo","length","key","Filters","numberLeft","currentFilter","keys","filterKey","filterName","TodoApp","Filter","onbeforeunload","store","getState","setItem","stringify","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8038ff84.chunk.js","sourcesContent":["/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-02 17:32:16\r\n * @LastEditTime: 2020-07-06 20:28:58\r\n */ \r\n\r\nexport const FILTERS = {\r\n    ALL: \"all\",\r\n    ACTIVE: \"active\",\r\n    COMPLETED: \"completed\"\r\n};\r\n\r\nexport const ACTIONS = {\r\n    ADD_TODO: \"ADD_TODO\",\r\n    REMOVE_TODO: \"REMOVE_TODO\",\r\n    CHANGE_TODO: \"CHANGE_TODO\",\r\n    TOGGLE_TODO: \"TOGGLE_TODO\",\r\n    TOGGLE_ALL: \"TOGGLE_ALL\",\r\n    REMOVE_COMPLETED: \"REMOVE_COMPLETED\",\r\n    SET_FILTER: \"SET_FILTER\"\r\n};","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-02 16:59:58\r\n * @LastEditTime: 2020-07-07 13:02:55\r\n */\r\n\r\nimport { FILTERS, ACTIONS } from \"./constants\";\r\nimport {loadState} from \"./localStorage\"\r\n\r\n\r\nconst initialState = loadState() || {\r\n    allIds: [],\r\n    allTodos: {},\r\n    filter: FILTERS.ALL,\r\n};\r\n\r\nconsole.log('here');\r\n\r\nexport default function todoReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ACTIONS.ADD_TODO: {\r\n            const { id, content } = action.payload;\r\n            return {\r\n                ...state,\r\n                allIds: [...state.allIds, id],\r\n                allTodos: {\r\n                    ...state.allTodos,\r\n                    [id]: {\r\n                        content,\r\n                        completed: false,\r\n                    },\r\n                },\r\n            };\r\n        };\r\n        case ACTIONS.REMOVE_TODO: {\r\n            const { id } = action.payload;\r\n            // delete state.allTodos[id];\r\n            const newTodos = Object.assign({}, state.allTodos);\r\n            delete newTodos[id];\r\n            return {\r\n                ...state,\r\n                allIds: state.allIds.filter((e) => e !== id),\r\n                allTodos: newTodos,\r\n            };\r\n        };\r\n        case ACTIONS.CHANGE_TODO: {\r\n            const { id, content } = action.payload;\r\n            return {\r\n                ...state,\r\n                allTodos: {\r\n                    ...state.allTodos,\r\n                    [id]: {\r\n                        content,\r\n                        completed: false,\r\n                    },\r\n                },\r\n            };\r\n        };\r\n        case ACTIONS.TOGGLE_TODO: {\r\n            const { id } = action.payload;\r\n            return {\r\n                ...state,\r\n                allTodos: {\r\n                    ...state.allTodos,\r\n                    [id]: {\r\n                        ...state.allTodos[id],\r\n                        completed: !state.allTodos[id].completed,\r\n                    },\r\n                },\r\n            };\r\n        };\r\n        case ACTIONS.SET_FILTER: \r\n            return {\r\n                ...state,\r\n                filter: action.payload.filter,\r\n            };\r\n        case ACTIONS.TOGGLE_ALL: {\r\n            const { allIds, allTodos } = { ...state };\r\n            const newTodos = Object.assign({}, allTodos);\r\n            let allCompleted = true;\r\n            for (let id of allIds)\r\n                if (allTodos[id].completed === false) {\r\n                    allCompleted = false;\r\n                    break;\r\n                };\r\n            allIds.forEach((id) => newTodos[id].completed = allCompleted ? false : true);\r\n            return {\r\n                ...state,\r\n                allTodos: newTodos,\r\n            };\r\n        };\r\n        case ACTIONS.REMOVE_COMPLETED: \r\n            const { allIds, allTodos } = { ...state };\r\n            const newTodos = {}\r\n            const newIds = allIds.filter(id => !allTodos[id].completed);\r\n            newIds.forEach(id => newTodos[id] = allTodos[id]);\r\n            return {\r\n                ...state,\r\n                allIds: newIds,\r\n                allTodos: newTodos,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-07 12:43:55\r\n * @LastEditTime: 2020-07-07 13:13:31\r\n */ \r\n\r\nexport const saveState = state => {\r\n    if (window.localStorage) \r\n        window.localStorage.setItem('state',JSON.stringify(state));\r\n}\r\n\r\nexport const loadState = () => {\r\n    if (window.localStorage) {\r\n        const state = JSON.parse(localStorage.getItem(\"state\"));\r\n        console.log(state);\r\n        if (state === null) {\r\n            console.log('null');\r\n            return undefined;\r\n        }\r\n        else\r\n            return state;\r\n    }\r\n}","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-02 16:51:43\r\n * @LastEditTime: 2020-07-03 00:45:44\r\n */ \r\nimport { createStore } from \"redux\";\r\nimport todoReducer from \"./reducers\"\r\n\r\nexport default createStore(todoReducer);","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-02 16:53:38\r\n * @LastEditTime: 2020-07-06 20:28:37\r\n */\r\n\r\nimport { ACTIONS } from \"./constants\";\r\nlet todoId = 0;\r\n\r\nexport const addTodo = content => ({\r\n    type: ACTIONS.ADD_TODO,\r\n    payload: {\r\n        id: ++todoId,\r\n        content: content,\r\n    },\r\n});\r\n\r\nexport const removeTodo = id => ({\r\n    type: ACTIONS.REMOVE_TODO,\r\n    payload:{ id }\r\n    \r\n})\r\n\r\nexport const renameTodo = (id, content) => ({\r\n    type: ACTIONS.CHANGE_TODO,\r\n    payload: { id, content }\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n    type: ACTIONS.TOGGLE_TODO,\r\n    payload: { id }\r\n})\r\n\r\nexport const setFilter = filter => ({\r\n    type: ACTIONS.SET_FILTER,\r\n    payload: {filter}\r\n})\r\n\r\nexport const toggleAll = () => ({\r\n    type:ACTIONS.TOGGLE_ALL,\r\n})\r\n\r\nexport const removeCompleted = () => ({\r\n    type: ACTIONS.REMOVE_COMPLETED,\r\n})","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-03 00:57:33\r\n * @LastEditTime: 2020-07-06 20:19:30\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { addTodo } from \"../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AddTodo = () => {\r\n    const dispatch = useDispatch();\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"todo-add\">\r\n            <input\r\n                placeholder=\"add a todo\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n                value={content}\r\n                onKeyDown={(e) => {\r\n                    if (e.keyCode === 13) {\r\n                        if (e.target.value) {\r\n                            setContent(\"\");\r\n                            dispatch(addTodo(e.target.value));\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTodo;\r\n","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-02 13:54:03\r\n\r\n */\r\n\r\nimport React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport cx from \"classnames\";\r\nimport { toggleTodo, removeTodo, renameTodo } from \"../redux/actions\";\r\n\r\nclass TodoItem extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            completed: this.props.todo.completed,\r\n            content: this.props.todo.content,\r\n            editing: false,\r\n        };\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleRename = this.handleRename.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleToggle() {\r\n        this.setState({ completed: !this.props.todo.completed });\r\n        this.props.toggleTodo(this.props.todo.id);\r\n    }\r\n\r\n    handleRemove() {\r\n        this.props.removeTodo(this.props.todo.id);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ content: e.target.value });\r\n    }\r\n\r\n    handleRename(e) {\r\n        this.setState({ editing: false });\r\n        if (e.target.value !== \"\")\r\n            this.props.renameTodo(this.props.todo.id, e.target.value);\r\n        else this.props.removeTodo(this.props.todo.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li>\r\n                <div\r\n                    className={cx(\r\n                        \"todo-item\",\r\n                        !this.props.todo.completed ? \"active-todo\" : \"completed-todo\"\r\n                    )}\r\n                >\r\n                    {this.props.todo.completed ? (\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked=\"checked\"\r\n                            onChange={this.handleToggle}\r\n                        />\r\n                    ) : (\r\n                        <input type=\"checkbox\" onChange={this.handleToggle} />\r\n                    )}\r\n                    <div\r\n                        className={cx(\r\n                            \"todo-content\",\r\n                            this.state.editing ? \"edit-content\" : \"view-content\"\r\n                        )}\r\n                        onDoubleClick={this.props.todo.completed ? () => false : (e => {\r\n                            this.setState({ editing: true });\r\n                            e.target.lastElementChild.focus();\r\n                        })}\r\n                    >\r\n                        <label\r\n                            onDoubleClick={this.props.todo.completed?()=>false: (e => {\r\n                                this.setState({ editing: true });\r\n                                e.target.nextElementSibling.focus();\r\n                                e.stopPropagation();\r\n                            })}>{this.state.content}</label>\r\n                        {!this.props.todo.completed && (\r\n                            <input\r\n                                value={this.state.content||\"\"}\r\n                                onChange={this.handleChange}\r\n                                onKeyDown={(e) => {\r\n                                    e.keyCode === 13 && e.target.blur();\r\n                                }}\r\n                                onDoubleClick={e=>e.stopPropagation()}\r\n                                onBlur={this.handleRename}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <button onClick={this.handleRemove}><div></div></button>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { toggleTodo, removeTodo, renameTodo })(TodoItem);\r\n","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-03 00:59:16\r\n\r\n */ \r\nimport React from 'react';\r\nimport TodoItem from \"./TodoItem\"\r\nimport { FILTERS } from \"../redux/constants\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction getFilteredTodo(ids, todos, filter) {\r\n    let allTodos = ids.map(id=>({...todos[id],id}))\r\n    switch (filter) {\r\n        case FILTERS.ACTIVE:\r\n            return allTodos.filter(todo => !todo.completed);\r\n        case FILTERS.COMPLETED:\r\n            return allTodos.filter(todo => todo.completed);\r\n        case FILTERS.ALL:\r\n            return allTodos;\r\n        default:\r\n            return allTodos;\r\n    }\r\n}\r\n\r\nconst TodoList = () => {\r\n    // let { ids, todos, filter } = useSelector(state => {...state});\r\n    let { allIds, allTodos,filter } = { ...useSelector(state => state) };\r\n    let filteredTodos = getFilteredTodo(allIds,allTodos, filter);\r\n    return <ul className=\"todo-list\">\r\n        {filteredTodos && filteredTodos.length\r\n            ? filteredTodos.map(todo => {\r\n                return <TodoItem key={`todo-${todo.id}`} todo={todo} />\r\n            })\r\n            : \"No todos yet!\"}\r\n    </ul >\r\n};\r\n\r\nexport default TodoList;","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-03 00:59:25\r\n * @LastEditTime: 2020-07-07 00:06:09\r\n */\r\n\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport cx from \"classnames\";\r\nimport { setFilter, toggleAll, removeCompleted } from \"../redux/actions\";\r\nimport { FILTERS } from \"../redux/constants\";\r\n\r\nconst Filters = () => {\r\n    const numberLeft = useSelector((state) => state.allIds.length);\r\n    // const { ids, todos, filter } = { ...useSelector(state => state) };\r\n    const currentFilter = useSelector((state) => state.filter);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        numberLeft > 0 && (\r\n            <div className=\"filters\">\r\n                <button className=\"toggle-all\" onClick={()=>dispatch(toggleAll())}>All</button>\r\n                <span className=\"number-left\">{numberLeft + \" todos left\"}</span>\r\n                {/* <input type=\"checkbox\" className=\"toggleAll\"  */}\r\n                {Object.keys(FILTERS).map((filterKey) => {\r\n                    const filterName = FILTERS[filterKey];\r\n                    return (\r\n                        <span\r\n                            key={`filter-${filterKey}`}\r\n                            className={cx(\r\n                                \"filter\",\r\n                                filterName === currentFilter && \"filter-active\"\r\n                            )}\r\n                            onClick={() => dispatch(setFilter(filterName))}\r\n                        >\r\n                            {filterName}\r\n                        </span>\r\n                    );\r\n                })}\r\n                <a className=\"remove-completed\" onClick={()=>dispatch(removeCompleted())}>remove completed</a>\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Filters;\r\n","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-03 17:51:15\r\n * @LastEditTime: 2020-07-05 01:21:44\r\n */\r\n\r\nimport React from \"react\";\r\nimport Addtodo from \"./AddTodo\";\r\nimport TodoList from \"./TodoList\";\r\nimport Filter from \"./Filter\";\r\nimport \"./styles.css\"\r\n\r\nexport default function TodoApp() {\r\n    return <div className=\"todo-app\">\r\n        <Addtodo />\r\n        <TodoList />\r\n        <Filter />\r\n    </div>;\r\n}\r\n","/*\r\n * @Author: Jin X\r\n * @Date: 2020-07-02 16:35:26\r\n\r\n */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport TodoApp from \"./components/App\";\r\n\r\nimport { saveState } from \"./redux/localStorage\";\r\n\r\nwindow.onbeforeunload = (e) => {\r\n    console.log(store.getState());\r\n    saveState(store.getState());\r\n}\r\n\r\nconst root = document.getElementById(\"root\");\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <TodoApp />\r\n    </Provider>,\r\n    root\r\n);\r\n"],"sourceRoot":""}